<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
    <head>
        <title>Summary</title>
        <link href="css/style.css" rel="stylesheet" type="text/css"/>
        <meta charset="utf-8"/>
<meta content="urn:uuid:dd0ab1fe-cf2d-4e17-8acb-531b7ebebf1a" name="Adept.expected.resource"/>
    </head>

    <body>
        <section>

                            <header>
                    <h1 class="header-title">Summary</h1>
                </header>
            
            <article>
                
<p>In this chapter, we introduced many applied and practical considerations for Rust programming. Performance and debugging are certainly not problems that are exclusive to Functional Programming. Here we tried to introduce tips that are generally applicable but also highly compatible with functional programming.</p>
<p>Metaprogramming in Rust may be considered a functional feature by itself. Logic programming and thereby derived functionality are closely associated with functional programming principles. The recursive, context-free nature of macros also lends itself to a functional perspective.</p>
<p>This is also the last chapter in the book. We hope you have enjoyed the book and we welcome any feedback. If you are looking for further reading, you might want to research some of the topics presented in the final three chapters of the book. There is an enormous amount of material available on these subjects and any path taken will surely further improve your understanding of Rust and functionalÂ programming.</p>


            </article>

            
        </section>
    </body>

</html>