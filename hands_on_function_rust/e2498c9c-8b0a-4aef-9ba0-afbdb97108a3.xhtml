<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
    <head>
        <title>Summary</title>
        <link href="css/style.css" rel="stylesheet" type="text/css"/>
        <meta charset="utf-8"/>
<meta content="urn:uuid:dd0ab1fe-cf2d-4e17-8acb-531b7ebebf1a" name="Adept.expected.resource"/>
    </head>

    <body>
        <section>

                            <header>
                    <h1 class="header-title">Summary</h1>
                </header>
            
            <article>
                
<p>In this chapter, we examined four code organization principles that can be used alone or in combination to develop well-structured projects. The four principles of organization by type, by purpose, by layer, and by convenience are helpful perspectives for inspiring good architecture choices when structuring larger projects. The larger and more complex a project becomes, the more important these decisions become, though simultaneously more difficult to change.</p>
<p>Applying these concepts, we restructured the entire project using each principle to a varying degree. We also incorporated significant changes to allow interfacing with external libraries and applied operations of the elevator, as opposed to a closed simulation. Now, the elevators of three buildings should be capable of running entirely on the software developed here.</p>
<p>In the next chapter, we will learn about mutability and ownership. We have covered these concepts to a certain degree already, but the next chapter will demand a much more in-depth understanding of specific details and limitations.</p>


            </article>

            
        </section>
    </body>

</html>