<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
    <head>
        <title>Functional Data Structures</title>
        <link href="css/style.css" rel="stylesheet" type="text/css"/>
        <meta charset="utf-8"/>
<meta content="urn:uuid:dd0ab1fe-cf2d-4e17-8acb-531b7ebebf1a" name="Adept.expected.resource"/>
    </head>

    <body>
        <section>

                            <header>
                    <h1 class="header-title">Functional Data Structures</h1>
                </header>
            
            <article>
                
<p>Data structures are the second most basic building blocks of programming, following control flow. After early languages developed control flow structures, it quickly became apparent that simple variable labels were insufficient for developing complex programs. Data structures have evolved from the basic concept of a sized datum stored at an address to the concept of strings and arrays, followed by mixed structures, and finally collections.</p>
<p>In this chapter, we will revisit the project introduced in <a href="bf10aff4-ca84-44a7-a982-b156c9cde41e.xhtml" target="_blank">Chapter 2</a>,Â <em><span>Functional Control Flow</span></em>. The project requirements have expanded to accommodate feedback from the potential client. There are also specific performance targets that must be met due to competition from a rival developer. To help our business succeed, we must now improve the previous simulation and ensure that it meets customer demand and performance targets.</p>
<p>In this chapter, we will cover the following:</p>
<ul>
<li>Adjusting to changing the scope of the project</li>
<li>Reformatting code to support multiple use cases</li>
<li>Using appropriate data structures to gather, store, and process data</li>
<li>Organizing code into traits and data classes</li>
</ul>


            </article>

            
        </section>
    </body>

</html>